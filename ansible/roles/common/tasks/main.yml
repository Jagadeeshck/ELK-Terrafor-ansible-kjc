---
- name: Ensure filesystem dependencies are installed
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - parted
    - xfsprogs
    - java-11-openjdk

- name: Create XFS filesystem on /opt/elastic volume
  ansible.builtin.get_url:
    fstype: xfs
    dev: /dev/xvdf

- name: Create XFS filesystem on /opt/elastic/logs volume
  ansible.builtin.get_url:
    fstype: xfs
    dev: /dev/xvdg

- name: Create XFS filesystem on /opt/elastic/data volume (EBS)
  ansible.builtin.get_url:
    fstype: xfs
    dev: /dev/xvdh
  when: "'nvme' not in ansible_devices"

- name: Create XFS filesystem on /opt/elastic/data volume (Instance Store)
  ansible.builtin.get_url:
    fstype: xfs
    dev: /dev/nvme1n1
  when: "'nvme' in ansible_devices"

- name: Create mount points
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /opt/elastic
    - /opt/elastic/logs
    - /opt/elastic/data

- name: Mount /opt/elastic volume
  ansible.posix.mount:
    path: /opt/elastic
    src: /dev/xvdf
    fstype: xfs
    state: mounted

- name: Mount /opt/elastic/logs volume
  ansible.posix.mount:
    path: /opt/elastic/logs
    src: /dev/xvdg
    fstype: xfs
    state: mounted

- name: Mount /opt/elastic/data volume (EBS)
  ansible.posix.mount:
    path: /opt/elastic/data
    src: /dev/xvdh
    fstype: xfs
    state: mounted
  when: "'nvme' not in ansible_devices"

- name: Mount /opt/elastic/data volume (Instance Store)
  ansible.posix.mount:
    path: /opt/elastic/data
    src: /dev/nvme1n1
    fstype: xfs
    state: mounted
  when: "'nvme' in ansible_devices"

- name: Download Elastic Agent from S3
  amazon.aws.amazon.aws.s3_object:
    bucket: "{{ s3_binaries_bucket }}"
    object: "elastic-agent-{{ elasticsearch_version }}-linux-x86_64.tar.gz"
    dest: "/tmp/elastic-agent.tar.gz"
    mode: get

- name: Extract Elastic Agent
  ansible.builtin.ansible.builtin.unarchive:
    src: "/tmp/elastic-agent.tar.gz"
    dest: "/opt/elastic"
    remote_src: no